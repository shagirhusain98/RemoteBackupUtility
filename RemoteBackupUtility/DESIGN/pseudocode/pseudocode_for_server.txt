Pesudocode for Remote Backup Utility

First function: MAIN FUNCTION

-----Creating Sockets to send and recieve information -----

 
 

----main function begins-----	 
BEGIN

Reading current time storing the MON,DOM & HH:MM in a string

CREATING A SOCKET
 Creatinga socket and acknowledging the user
CONNECTING TO THE SERVER
 checking weather the socket is connected or not
 IF successful
	 acknowledge the user
 ELSE 
	END

Reciving count, option and directory 
//validating arguments
//assigning the revieved to count,option and directory


STARTING A IF ELSE LADDER FOR ALL THE OPTIONS
IF OPTION == -ff	
	IF ARGC != number THEN
		PRINT "error!! enter correct number of arguments"
	END
        ELSE
		reading argv[3] argv[4] .... argv[argc-1]
		sending the argv[]'s (filenames) to server
		making the file pathname by conatinating argv[]'s and Directory
		calling the SEND_FILE() with socket name and filename

ELSE IF OPTION == -fd	
	IF ARGC != number THEN
		PRINT "error!! enter correct number of arguments"
	END
        ELSE
		reading argv[2] argv[3] .... argv[argc-1]
		SENDing the directory paths to the server
		OPENING the argv[]'s(directories)
		READING all the filenames and concatinating to directories to create filepath 
		calling the SEND_FILE() with socket name and filepath

ELSE IF OPTION == -if	
	IF ARGC != number THEN
		PRINT "error!! enter correct number of arguments"
	END
        ELSE
		reading argv[3] argv[4] .... argv[argc-1]
		making the file pathname by conatinating argv[]'s and Directory
		check wheather the file has been modified today
		IF yes
			calling the SEND_FILE() with socket name and filename


ELSE IF OPTION == -id	
	IF ARGC != number THEN
		PRINT "error!! enter correct number of arguments"
	END
        ELSE
		reading argv[3] argv[4] .... argv[argc-1]
		SENDing the directory paths to the server
		OPENING the directory and reading all the filenames
		making the file pathname by conatinating Directories and filenames
		check weather the file has been modified or not
		IF yes
			calling the SEND_FILE() with socket name and filename


ELSE IF OPTION == -vf	
	IF ARGC != number THEN
		PRINT "error!! enter correct number of arguments"
	END
        ELSE
		reading argv[2] argv[3] .... argv[argc-1]
		making the file pathname by conatinating argv[]'s and Directory
		calling the SEND_FILE() with socket name and filename

ELSE IF OPTION == -vd	
	IF ARGC != number THEN
		PRINT "error!! enter correct number of arguments"
	END
        ELSE
		reading argv[3] argv[4] .... argv[argc-1]
		SENDing the directory paths to the server
		OPENING the directory and reading all the filenames
		making the file pathname by conatinating Directories and filenames
		calling the SEND_FILE() with name and socketname

ELSE IF OPTION == -sf	
	IF ARGC != number THEN
		PRINT "error!! enter correct number of arguments"
	END
        ELSE
		reading argv[2] argv[3] .... argv[argc-1]
		creating a cronjob based on argv's
		concayinating the cronjob to the config file
		copying the cronjob schedule "* * * * *" to string
		SENDing the schedule string to the server 

ELSE IF OPTION == -sd	
	IF ARGC != number THEN
		PRINT "error!! enter correct number of arguments"
	END
        ELSE
		reading argv[3] argv[4] .... argv[argc-1]
		creating a cronjob based on argv's
		concayinating the cronjob to the config file
		copying the cronjob schedule "* * * * *" to string
		SENDing the schedule string to the server 
		
----main function ends----

----function definitions----

FUNCTION SEND_FILE 
PASS IN: FILENAME, SOCKETNAME
PASS OUT: NOTHING
	OPEN FILE USEING the FILENAME
	read the contents of the file 
	SEND the contents of the file to the server using teh SOCKETNAME
	FLIGHT_LIST -> TAIL is NULL
ENDFUNCTION



	
